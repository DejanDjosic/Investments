{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Desktop\\\\radnidir\\\\Investments\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport ResultTable from \"./components/ResultTable\";\nimport ErrorModal from \"./components/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [yearlyDataArray, setYearlyDataArray] = useState([]);\n  const [isValidInput, setIsValidInput] = useState(true);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No investment calculated yet.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this);\n  const calculateHandler = userInput => {\n    const yearlyData = [];\n    let currentSavings = +userInput[\"current-savings\"];\n    const yearlyContribution = +userInput[\"yearly-contribution\"];\n    const expectedReturn = +userInput[\"expected-return\"] / 100;\n    const duration = +userInput[\"duration\"];\n    if (currentSavings < 1 && yearlyContribution < 1 && expectedReturn < 1 && duration < 1) {\n      setIsValidInput(false);\n    } else {\n      setIsValidInput(true);\n\n      // The below code calculates yearly results (total savings, interest etc)\n      for (let i = 0; i < duration; i++) {\n        const yearlyInterest = currentSavings * expectedReturn;\n        currentSavings += yearlyInterest + yearlyContribution;\n        yearlyData.push({\n          year: i + 1,\n          yearlyInterest: yearlyInterest,\n          savingsEndOfYear: currentSavings,\n          yearlyContribution: yearlyContribution\n        });\n      }\n      setYearlyDataArray(yearlyData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSaveData: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), !isValidInput ? content : content = /*#__PURE__*/_jsxDEV(ResultTable, {\n      results: yearlyDataArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bbjPBzFduXDWFGtS1adstKUK9f8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Form","ResultTable","ErrorModal","jsxDEV","_jsxDEV","App","_s","yearlyDataArray","setYearlyDataArray","isValidInput","setIsValidInput","content","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateHandler","userInput","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","onSaveData","results","_c","$RefreshReg$"],"sources":["C:/Users/Dejan/Desktop/radnidir/Investments/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport ResultTable from \"./components/ResultTable\";\nimport ErrorModal from \"./components/ErrorModal\";\nfunction App() {\n  const [yearlyDataArray, setYearlyDataArray] = useState([]);\n  const [isValidInput, setIsValidInput] = useState(true);\nlet content=<p>No investment calculated yet.</p>\n\n  const calculateHandler = (userInput) => {\n    const yearlyData = [];\n    let currentSavings = +userInput[\"current-savings\"];\n    const yearlyContribution = +userInput[\"yearly-contribution\"];\n    const expectedReturn = +userInput[\"expected-return\"] / 100;\n    const duration = +userInput[\"duration\"];\n\n    if (\n      currentSavings < 1 &&\n      yearlyContribution < 1 &&\n      expectedReturn < 1 &&\n      duration < 1\n    ) {\n      setIsValidInput(false);\n    } else {\n      setIsValidInput(true);\n\n      // The below code calculates yearly results (total savings, interest etc)\n      for (let i = 0; i < duration; i++) {\n        const yearlyInterest = currentSavings * expectedReturn;\n        currentSavings += yearlyInterest + yearlyContribution;\n        yearlyData.push({\n          year: i + 1,\n          yearlyInterest: yearlyInterest,\n          savingsEndOfYear: currentSavings,\n          yearlyContribution: yearlyContribution,\n        });\n      }\n      setYearlyDataArray(yearlyData);\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <Form onSaveData={calculateHandler} />\n      {/* {content} */}\n      {!isValidInput ? content: content=<ResultTable results={yearlyDataArray} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxD,IAAIa,OAAO,gBAACP,OAAA;IAAAQ,QAAA,EAAG;EAA6B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE9C,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IACtC,MAAMC,UAAU,GAAG,EAAE;IACrB,IAAIC,cAAc,GAAG,CAACF,SAAS,CAAC,iBAAiB,CAAC;IAClD,MAAMG,kBAAkB,GAAG,CAACH,SAAS,CAAC,qBAAqB,CAAC;IAC5D,MAAMI,cAAc,GAAG,CAACJ,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC1D,MAAMK,QAAQ,GAAG,CAACL,SAAS,CAAC,UAAU,CAAC;IAEvC,IACEE,cAAc,GAAG,CAAC,IAClBC,kBAAkB,GAAG,CAAC,IACtBC,cAAc,GAAG,CAAC,IAClBC,QAAQ,GAAG,CAAC,EACZ;MACAb,eAAe,CAAC,KAAK,CAAC;IACxB,CAAC,MAAM;MACLA,eAAe,CAAC,IAAI,CAAC;;MAErB;MACA,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;QACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;QACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;QACrDF,UAAU,CAACO,IAAI,CAAC;UACdC,IAAI,EAAEH,CAAC,GAAG,CAAC;UACXC,cAAc,EAAEA,cAAc;UAC9BG,gBAAgB,EAAER,cAAc;UAChCC,kBAAkB,EAAEA;QACtB,CAAC,CAAC;MACJ;MACAb,kBAAkB,CAACW,UAAU,CAAC;IAChC;EACF,CAAC;EAED,oBACEf,OAAA;IAAAQ,QAAA,gBACER,OAAA,CAACL,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVZ,OAAA,CAACJ,IAAI;MAAC6B,UAAU,EAAEZ;IAAiB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAErC,CAACP,YAAY,GAAGE,OAAO,GAAEA,OAAO,gBAACP,OAAA,CAACH,WAAW;MAAC6B,OAAO,EAAEvB;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV;AAACV,EAAA,CA7CQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}